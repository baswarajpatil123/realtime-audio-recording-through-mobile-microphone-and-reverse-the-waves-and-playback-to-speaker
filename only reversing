Java code that can invert sound waves coming from a mobile microphone in real time. However, this is not a trivial task and may require additional libraries or frameworks to handle the audio input and output. Also, please note that this code is for illustrative purposes only . I do not guarantee the correctness or efficiency of this code.

```java
import javax.sound.sampled.*;

// A class that can invert sound waves from a microphone
public class SoundInverter {

    // The sample rate in Hz
    private static final int SAMPLE_RATE = 44100;

    // The audio format to use
    private static final AudioFormat FORMAT = new AudioFormat(
            AudioFormat.Encoding.PCM_SIGNED, // Encoding
            SAMPLE_RATE, // Sample rate
            16, // Sample size in bits
            1, // Channels
            2, // Frame size in bytes
            SAMPLE_RATE, // Frame rate
            false // Big endian
    );

    // The buffer size in bytes
    private static final int BUFFER_SIZE = 1024;

    // The source data line for output
    private SourceDataLine outputLine;

    // The target data line for input
    private TargetDataLine inputLine;

    // A flag to indicate if the inverter is running
    private boolean running;

    // A constructor that initializes the input and output lines
    public SoundInverter() throws LineUnavailableException {
        outputLine = AudioSystem.getSourceDataLine(FORMAT);
        inputLine = AudioSystem.getTargetDataLine(FORMAT);
        outputLine.open(FORMAT, BUFFER_SIZE);
        inputLine.open(FORMAT, BUFFER_SIZE);
    }
// A method that starts the inverter
public void start() {
    running = true; // Set the running flag to true
    outputLine.start(); // Start the output line
    inputLine.start(); // Start the input line
    // Rest of the code is same as before
}
// Invert the bytes by flipping the sign bit
                for (int i = 0; i < bytesRead; i++) {
                    buffer[i] = (byte) (buffer[i] ^ 0x80);
                }
                // Write to the output
                outputLine.write(buffer, 0, bytesRead);
            }
        }).start();
    }

    // A method that stops the inverter
    public void stop() {
        running = false;
        outputLine.stop();
        inputLine.stop();
        outputLine.close();
        inputLine.close();
    }
}
```

This is the end of the class. I hope this helps you with your task. ðŸ˜Š